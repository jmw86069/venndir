# Generated by roxygen2: do not edit by hand

S3method(plot,JamPolygon)
export(add_orientation_JamPolygon)
export(area_JamPolygon)
export(assemble_venndir_label)
export(bbox_JamPolygon)
export(buffer_JamPolygon)
export(check_JamPolygon)
export(check_Venndir)
export(counts2setlist)
export(curate_venn_labels)
export(degrees_to_adj)
export(diff_degrees)
export(display_angles)
export(eulerr_to_JamPolygon)
export(expand_range)
export(farthest_point_JamPolygon)
export(find_venn_overlaps_JamPolygon)
export(get_venn_polygon_shapes)
export(has_point_in_JamPolygon)
export(highlight_venndir_overlap)
export(im2list)
export(im_value2list)
export(intersect_JamPolygon)
export(label_fill_JamPolygon)
export(label_outside_JamPolygon)
export(label_segment_JamPolygon)
export(labelr_JamPolygon)
export(list2im_opt)
export(list2im_value)
export(make_color_contrast)
export(make_venn_combn_df)
export(make_venn_test)
export(match_list)
export(mean_degree_arc)
export(mean_degrees)
export(minus_JamPolygon)
export(modify_venndir_overlap)
export(nearest_point_JamPolygon)
export(nudge_JamPolygon)
export(nudge_venndir_label)
export(overlaplist2setlist)
export(point_in_JamPolygon)
export(polyclip_to_JamPolygon)
export(polygon_circles)
export(polygon_ellipses)
export(print_color_df)
export(rbind2.JamPolygon)
export(render_venndir)
export(rescale_coordinates)
export(sample_JamPolygon)
export(shrink_df)
export(signed_counts2setlist)
export(signed_overlaps)
export(simple_ellipse)
export(split_JamPolygon)
export(spread_degrees)
export(textvenn)
export(three_point_angle)
export(to_basic.GeomRichText)
export(to_basic.GeomTextBox)
export(union_JamPolygon)
export(update_JamPolygon)
export(venn_meme)
export(venndir)
export(venndir_label_style)
export(venndir_legender)
export(venndir_to_df)
exportMethods("[")
exportMethods("metadata<-")
exportMethods(im)
exportMethods(length)
exportMethods(metadata)
exportMethods(names)
exportMethods(overlapdf)
exportMethods(overlaplist)
exportMethods(plot)
exportMethods(rbind2)
exportMethods(setlist)
exportMethods(show)
exportMethods(signed_counts)
import(data.table)
importFrom(methods,as)
