% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/venndir-label-outside-jp.R
\name{label_outside_JamPolygon}
\alias{label_outside_JamPolygon}
\title{Position labels outside JamPolygon}
\usage{
label_outside_JamPolygon(
  jp,
  which_jp = NULL,
  center = NULL,
  buffer = -0.1,
  distance = 0.1,
  center_method = c("bbox", "label", "none"),
  vector_method = c("farthest", "label"),
  segment_method = c("nearest", "vector"),
  min_degrees = 15,
  relative = TRUE,
  y_snap_percent = 5,
  seed = 123,
  debug = FALSE,
  do_plot = FALSE,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{jp}{\code{JamPolygon}}

\item{which_jp}{\code{integer} or \code{NULL}; when \code{which_jp} contains one
or more \code{integer} values, they refer to rows in \code{jp}, and
each will be analyzed in sequence. When \code{which_jp=NULL} then
all the polygons in \code{jp} will be analyzed in sequence.}

\item{center}{\code{numeric} vector or matrix with two values indicating
the center position.
\itemize{
\item In all cases, the overall center is defined using
\code{center_method}, then it is adjusted by \code{center} when defined.
\item When \code{center=NULL} the \code{center_method} value is used.
\item When \code{center} is provided and \code{relative=TRUE}
(default), the overall center position is adjusted using
\code{center} interpreted as relative values.
\item When \code{relative=FALSE} the values \code{center} are added to the
overall center position. To use \code{center} as absolute coordinates,
select \code{center_method="none"}.
}}

\item{buffer}{\code{numeric} buffer, default -0.1, inside the polygon
used to draw a line segment connecting the label to the appropriate
polygon.}

\item{distance}{\code{numeric} value, default 0.1, indicating the
distance from the perimiter of \code{jp} to place labels.
This value is the \code{buffer} for \code{buffer_JamPolygon()}.}

\item{center_method}{\code{character} string indicating the method to
determine the \code{center}:
\itemize{
\item \code{"label"} uses the mean x,y coordinate
of all the polygon label positions;
\item \code{"bbox"} uses the mean x,y
coordinate of the bounding box that encompasses the polygons.
\item \code{"none"} uses the origin 0,0 and is intended mainly to allow
\code{center} to be used as absolute coordinates.
}

The effect
is to extend outer labels radially around this center point.
Using the mean label position with \code{center_method="label"}
is helpful because it ensures labels are extended in all directions
even when most labels are in one upper or lower section of
the polygons.}

\item{vector_method}{\code{character} string indicating the vector from
\code{center} outward, to define the position outside the polygons.
\itemize{
\item \code{'farthest'} (default) aims to the farthest point from center.
\item \code{'label'} aims through the default label position in each polygon.
}}

\item{segment_method}{\code{character} string indicating how to connect
a line segment from the outside label, back to the polygon.
The line segment ends inside the polygon, defined by \code{buffer}.
\itemize{
\item \code{'nearest'} (default) points to the nearest border.
\item \code{'label'} points toward the default label position inside the
polygon.
}}

\item{min_degrees}{\code{numeric}, default 15, minimum degrees spacing
to impose between label positions, oriented around the center.
When there are more labels than can be divided, the threshold
is automatically lowered proportionally.}

\item{relative}{\code{logical} whether distance and buffer are relative
to plot dimensions, default TRUE.}

\item{y_snap_percent}{\code{numeric} percent of the plot dimensions
used to decide whether to "snap" two labels to the same y-axis value.
Default 5 means any labels within 5 percent of the plot dimensions
of one or more other labels will use the mean y-axis value,
thereby helping align labels by height where appropriate.}

\item{seed}{\code{numeric} used to set the random seed for reproducibility,
via \code{set.seed()}. Default is 123.}

\item{debug}{\code{logical} whether to print detailed debug information.}

\item{do_plot}{\code{logical} whether to create a plot with the input \code{jp}
and corresponding labels and line segments assigned to \code{which_jp}.
Default is FALSE.}

\item{verbose}{\code{logical} whether to print verbose output.}

\item{...}{additional arguments are ignored.}
}
\description{
Position labels outside JamPolygon
}
\details{
The purpose is to arrange labels outside a \code{JamPolygon} that
contains one or more parts. In general, it works best to supply
the entire \code{JamPolygon} even when labeling a subset of parts,
using \code{which_jp} to select the parts to label,
since it defines many coordinates relative to the overall
geometry.

There are several strategies used, from experiences trying
to label Euler diagrams in automated way. The general steps:
\enumerate{
\item Define \strong{center}.
\itemize{
\item The default uses the center of the bounding box.
\item An alternative is the mean position of each polygon internal
label, which is effective when most labels are skewed to one side.
}
\item Draw lines from center, through the polygon to label,
outside some distance.
\itemize{
\item The default chooses the farthest point from center for each
polygon.
\item An alternative is to use the polygon internal label position.
}
\item Define a line segment from the outside point back to the polygon,
inside by some distance.
\itemize{
\item The default uses the nearest point on the polygon to the outside point.
\item An alternative directs the line segment toward the internal
label for each polygon.
}
}

The defaults are quite effective, however some unusual arrangements or
shapes may warrant trying the other options.

When calling \code{venndir()}, the ellipses \code{'...'} are passed through to
this function \code{label_outside_JamPolygon()} to customize these options.
}
\examples{
v <- venndir(make_venn_test(n_sets=3), do_plot=FALSE)
jps <- v@jps

# plot visual summary
label_outside_JamPolygon(jps, do_plot=TRUE)

}
\seealso{
Other JamPolygon: 
\code{\link{JamPolygon-class}},
\code{\link{[,JamPolygon,ANY,ANY,ANY-method}},
\code{\link{add_orientation_JamPolygon}()},
\code{\link{area_JamPolygon}()},
\code{\link{bbox_JamPolygon}()},
\code{\link{buffer_JamPolygon}()},
\code{\link{check_JamPolygon}()},
\code{\link{eulerr_to_JamPolygon}()},
\code{\link{farthest_point_JamPolygon}()},
\code{\link{find_venn_overlaps_JamPolygon}()},
\code{\link{has_point_in_JamPolygon}()},
\code{\link{intersect_JamPolygon}()},
\code{\link{label_fill_JamPolygon}()},
\code{\link{label_segment_JamPolygon}()},
\code{\link{labelr_JamPolygon}()},
\code{\link{minus_JamPolygon}()},
\code{\link{nearest_point_JamPolygon}()},
\code{\link{nudge_JamPolygon}()},
\code{\link{plot.JamPolygon}()},
\code{\link{point_in_JamPolygon}()},
\code{\link{polyclip_to_JamPolygon}()},
\code{\link{polygon_circles}()},
\code{\link{polygon_ellipses}()},
\code{\link{sample_JamPolygon}()},
\code{\link{split_JamPolygon}()},
\code{\link{union_JamPolygon}()},
\code{\link{update_JamPolygon}()}
}
\concept{JamPolygon}
