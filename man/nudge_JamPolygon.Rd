% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/venndir-polyclip.R
\name{nudge_JamPolygon}
\alias{nudge_JamPolygon}
\title{Nudge JamPolygon coordinates}
\usage{
nudge_JamPolygon(
  jp,
  nudge = NULL,
  rotate_degrees = 0,
  center = NULL,
  scale = c(1, 1),
  verbose = FALSE,
  ...
)
}
\arguments{
\item{jp}{\code{JamPolygon} object}

\item{nudge}{\code{list} whose names match \code{names(jp)}, containing \code{numeric}
vector with coordinates x and y. Alternatively, an atomic \code{numeric}
vector with length=2, which will be applied to the x,y coordinates
for all polygons in \code{jp}.
An example of list input:
\code{nudge=list(polyname1=c(1, 0))}}

\item{rotate_degrees}{\code{numeric} optional rotation in degrees,
named using \code{names(jp)}.
When a single unnamed value is provided, it is applied to all polygons
in \code{jp}.
When a \code{numeric} vector is provided with \code{length(jp)}, it is applied
in order to each polygon in \code{jp}.
Note: 90 degrees will rotate clockwise
(top the right, bottom to the left) by 1/4 turn.}

\item{center}{\code{numeric} coordinates with optional center position.
Default \code{NULL} will use the center of the bounding box of \code{jp}.
All parts of the polygon, and all polygons, use the same \code{center}.}

\item{scale}{\code{numeric} optional scalar to enlarge or shrink the polygon,
named using \code{names(jp)}. Alternatively, if a single unnamed value
is provided, it is applied to all polygons in \code{jp}.
If a \code{numeric} vector is provided with \code{length(jp)}, it is applied
in order to each polygon in \code{jp}.
The scale is applied relative to the \code{center} as provided or calculated.}

\item{...}{additional arguments are ignored}
}
\description{
Nudge JamPolygon coordinates
}
\details{
Polygon coordinates within a \code{JamPolygon} object are nudged by name
or polygon number, such that all parts of each polygon are adjusted
together. For multi-part polygons, and/or polygons with internal holes,
all parts are moved the identical amount.
}
\examples{
DEdf <- data.frame(check.names=FALSE,
   name=c("D", "E"),
   x=I(list(
      c(-3, 3, 3, 0, -3),
      c(-4, 2, 2, -4))),
   y=I(list(
      c(-3, -3, 1.5, 4, 1.5),
      c(-2, -2, 4, 4))),
   fill=c("#FFD70055", "#B2222255"))
DEjp <- new("JamPolygon", polygons=DEdf)
plot(DEjp)
nudge <- list(D=c(7, 1), E=c(-1, -1));
DEjp_nudged <- nudge_JamPolygon(DEjp, nudge=nudge)
plot(DEjp_nudged)

# plot the difference
plot_jpdiff <- function(a, b) {
  fillb <- jamba::alpha2col(alpha=0.9, b@polygons$fill);
  filla <- jamba::alpha2col(alpha=0.3, fillb)
  plot(rbind2(a, b),
    fill=c(filla, fillb),
    label=c(paste(a@polygons$name, "old"),
      paste(b@polygons$name, "new")),
    border.lty=rep(c(2, 1), c(length(a), length(b))))
}
plot_jpdiff(DEjp, DEjp_nudged)

# rotate, nudge, and scale
DEjp_rotated <- nudge_JamPolygon(DEjp,
   rotate_degrees=c(E=45),
   scale=c(E=0.7),
   nudge=list(E=c(5, 0), D=c(-1, -4)))
plot_jpdiff(DEjp, DEjp_rotated)

}
\seealso{
Other JamPolygon: 
\code{\link{JamPolygon-class}},
\code{\link{[,JamPolygon,ANY,ANY,ANY-method}},
\code{\link{add_orientation_JamPolygon}()},
\code{\link{area_JamPolygon}()},
\code{\link{bbox_JamPolygon}()},
\code{\link{buffer_JamPolygon}()},
\code{\link{check_JamPolygon}()},
\code{\link{eulerr_to_JamPolygon}()},
\code{\link{farthest_point_JamPolygon}()},
\code{\link{find_venn_overlaps_JamPolygon}()},
\code{\link{has_point_in_JamPolygon}()},
\code{\link{intersect_JamPolygon}()},
\code{\link{label_fill_JamPolygon}()},
\code{\link{label_outside_JamPolygon}()},
\code{\link{label_segment_JamPolygon}()},
\code{\link{labelr_JamPolygon}()},
\code{\link{minus_JamPolygon}()},
\code{\link{nearest_point_JamPolygon}()},
\code{\link{plot.JamPolygon}()},
\code{\link{point_in_JamPolygon}()},
\code{\link{polyclip_to_JamPolygon}()},
\code{\link{polygon_circles}()},
\code{\link{polygon_ellipses}()},
\code{\link{sample_JamPolygon}()},
\code{\link{split_JamPolygon}()},
\code{\link{union_JamPolygon}()},
\code{\link{update_JamPolygon}()}
}
\concept{JamPolygon}
