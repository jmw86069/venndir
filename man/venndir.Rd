% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/venndir-base-polyclip.R
\name{venndir}
\alias{venndir}
\title{Directional Venn diagram}
\usage{
venndir(
  setlist,
  overlap_type = c("detect", "concordance", "each", "overlap", "agreement"),
  sets = NULL,
  set_colors = NULL,
  proportional = FALSE,
  show_labels = "Ncs",
  return_items = TRUE,
  show_items = c(NA, "none", "sign item", "sign", "item"),
  max_items = 3000,
  show_zero = FALSE,
  font_cex = c(1, 1, 0.8),
  show_label = NA,
  display_counts = TRUE,
  poly_alpha = 0.8,
  alpha_by_counts = FALSE,
  label_style = c("basic", "fill", "shaded", "shaded_box", "lite", "lite_box"),
  label_preset = "none",
  unicode = TRUE,
  big.mark = ",",
  curate_df = NULL,
  venn_jp = NULL,
  inside_percent_threshold = 0,
  item_cex = NULL,
  item_style = c("text", "gridtext"),
  item_buffer = -0.15,
  sign_count_delim = ": ",
  padding = c(3, 2),
  r = 2,
  segment_distance = 0.1,
  sep = "&",
  do_plot = TRUE,
  verbose = FALSE,
  debug = 0,
  circle_nudge = NULL,
  rotate_degrees = 0,
  ...
)
}
\arguments{
\item{setlist}{\code{list} of named vectors, whose names represent
set items, and whose values represent direction using
values \code{c(-1, 0, 1)}.}

\item{overlap_type}{\code{character} value indicating the type of
overlap logic:
\itemize{
\item \code{"each"} records each combination of signs;
\item \code{"overlap"} disregards the sign and returns any match
item overlap;
\item \code{"concordance"} represents counts for full
agreement, or \code{"mixed"} for any inconsistent overlapping
direction;
\item \code{"agreement"} represents full agreement in direction
as \code{"agreement"}, and \code{"mixed"} for any inconsistent
direction.
}}

\item{sets}{\code{integer} index with optional subset of sets in \code{setlist}
for the Venn diagram.
This option is useful when defining consistent \code{set_colors} for
all entries in \code{setlist}.}

\item{set_colors}{\code{character} vector of R colors, or \code{NULL} (default) to
use default colors defined by \code{colorjam::rainbowJam()}.}

\item{proportional}{\code{logical} (default FALSE) indicating whether
to draw proportional Venn circles, also known as a Euler diagram.
Proportional circles are not guaranteed to represent all possible
overlaps. Proportional circles are determined by calling
\code{eulerr::eulerr()}.
Use \code{shape="ellipse"} for \code{eulerr()} to provide elliptical shapes.}

\item{show_labels}{\code{character} string to define the labels to display,
and where they should be displayed.
The definition uses a single letter to indicate each type of label
to display, using UPPERCASE to display the label outside the Venn shape,
and lowercase to display the label inside the Venn shape.
The default \code{"Ncs"} displays _N_ame (outside), _c_ount (inside),
and _s_igned count (inside).

The label types are defined below:
\itemize{
\item _N_ame: "n" or "N" - the set name, by default it is displayed.
\item _O_verlap: "o" or "O" - the overlap name, by default it is hidden,
because these labels can be very long, also the overlap should be
evident in the Venn diagram already.
\item _c_ount: "c" or "C" - overlap count, independent of the sign
\item _p_ercentage: "p" or "P" - overlap percentage, by default hidden,
but available as an option
\item _s_igned count: "s" or "S" - the signed overlap count, tabulated
based upon \code{overlap_type} ("each", "concordant", "agreement", etc/)
\item _i_tems: "i" only, by default hidden. When enabled, item labels
defined by \code{show_items} are spread across the specific Venn overlap
region.
}}

\item{return_items}{\code{logical} (default TRUE) indicating whether to
return items in the overlap data. When \code{FALSE} item labels also
cannot be displayed in the figure.
The main reason not to return items is to conserve memory, for
example if \code{setlist} is extremely large.}

\item{show_items}{\code{character} used to define the item label,
only used when the \code{show_label} entry includes \code{"i"} which
enables item display inside the Venn diagram.
\itemize{
\item \code{"item"}: shows only the item labels
\item \code{"sign"}: shows only the sign of each item
\item \code{"sign items"}: shows the sign and item together
(or \code{"item sign"} will show the item, then the sign).
}}

\item{max_items}{\code{numeric} (default 3000) indicating the maximum number
of item labels to display when enabled.}

\item{show_zero}{\code{logical} (default FALSE) indicating whether empty
overlaps are labeled with count zero \code{0}. When \code{show_zero=TRUE} the
count zero label is displayed, otherwise no count label is shown.}

\item{font_cex}{\code{numeric} vector recycled and applied in order:
\enumerate{
\item Set label
\item Overlap count label
\item Signed count label
}

The default \code{c(1, 1, 0.8)} defines the signed count label slightly
smaller than other labels.}

\item{poly_alpha}{\code{numeric} (default 0.8) value between 0 and 1, for
alpha transparency of the polygon fill color.
This value is ignored when \code{alpha_by_counts=TRUE}.
\itemize{
\item \code{poly_alpha=1} is completely opaque (no transparency)
\item \code{poly_alpha=0.8} is 80\% opaque
}}

\item{alpha_by_counts}{\code{logical} indicating whether to define
alpha transparency to Venn polygon fill based upon the counts
contained in each polygon. When \code{TRUE} the \code{poly_alpha} is ignored.}

\item{label_style}{\code{character} string indicating the style for labels.
Label color is adjusted based upon the determined background color,
determined based upon the label fill color, and either the
device background color, or Venn overlap fill color.
There are pre-defined label styles.
\itemize{
\item \code{"basic"} no background shading
\item \code{"fill"} an opaque colored background
\item \code{"shaded"} a partially transparent colored background
\item \code{"lite"} a partially transparent lite background
\item \code{"box"} adds a dark border around the label region
}}

\item{label_preset}{\code{character} deprecated in favor of \code{show_labels}.
This argument is passed to \code{venndir_label_style()}.}

\item{unicode}{\code{logical} (default TRUE) indicating whether to
display Unicode arrows for signed overlaps. Passed to
\code{curate_venn_labels()}.
Use \code{unicode=FALSE} if the signed label is not displayed properly.
The most common causes: (1) the R console (terminal) is not configured
to allow Unicode (UTF-8 or UTF-16) characters; (2) the display
font does not contain Unicode characters in the font set.}

\item{big.mark}{\code{character} (default \code{","}) passed to \code{format()}
to augment numeric labels.}

\item{curate_df}{\code{data.frame} or \code{NULL} passed to \code{curate_venn_labels()},
used to customize the formatting of signed overlaps.}

\item{venn_jp}{\code{NULL} or optional \code{JamPolygon} which contains one
polygon for each \code{setlist}, intended to allow custom shapes to be
used. Otherwise \code{get_venn_polygon_shapes()} is called.}

\item{inside_percent_threshold}{\code{numeric} (default 0) indicating the
percent area that a Venn overlap region must contain in order
for the count label to be displayed inside the region,
otherwise the label is displayed outside the region.
Values are expected to range from 0 to 100.}

\item{item_cex}{\code{numeric} value (default NULL) used to resize item labels.
\itemize{
\item When \code{item_cex} is a single value or \code{NULL}, auto-scaling is
performed based upon the number of items in each overlap
polygon, and the relative polygon areas.
Any single \code{numeric} value for \code{item_cex} is multiplied by the
auto-scaled value for each overlap region.
\item When two or more values are supplied as a vector, the
values are recycled and applied across all Venn overlap regions,
in the order they appear in \code{signed_overlaps()}.
}}

\item{item_style}{\code{character} string (default "text") indicating
the style to display item labels when they are enabled.
\itemize{
\item \code{"text"} option is substantially faster, but does not allow
markdown.
\item \code{"gridtext"}:  substantially slower for a large number of labels,
but enables use of limited markdown by calling
\code{gridtext::richtext_grob()}.
Mostly useful for \code{venn_meme()}.
}}

\item{item_buffer}{\code{numeric} value (default -0.15) indicating the buffer
adjustment applied to Venn overlap regions before arranging item
labels. Passed to \code{label_fill_JamPolygon()} via \code{render_venndir()}.
Negative values are recommended, so they shrink the region.}

\item{sign_count_delim}{\code{character} string used as a delimiter between
the sign and counts, when \code{overlap_type} is not \code{"overlap"}.}

\item{padding}{\code{numeric} padding in units \code{"mm"} (default \code{c(3, 2)})
for overlap count, and signed overlap count labels, in order.}

\item{r}{\code{numeric} radius in units \code{"mm"} used for rounded
rectangle corners for labels. Only visible when \code{label_preset}
includes a background fill ("lite", "shaded", "fill"), or "box".}

\item{segment_distance}{\code{numeric} value indicating the distance
between outside labels and the outer edge of the Venn diaram region.
Larger values place labels farther away, while also shrinking the
relative size of the Venn diagram.}

\item{sep}{\code{character} used as a delimiter between set names,
the default is \code{"&"}.}

\item{do_plot}{\verb{logical (default TRUE) indicating whether to render the plot, or return data without rendering the plot. When }do_plot=FALSE\verb{the returned data can later be passed to}render_venndir()` to render the figure.}

\item{verbose}{\code{logical} indicating whether to print verbose output.}

\item{debug}{\code{numeric} optional internal debug.}

\item{circle_nudge}{\code{list} of \code{numeric} x,y vectors. Not yet
re-implemented after the version 0.0.30.900 update.}

\item{rotate_degrees}{\code{numeric} value in degrees, allowing rotation
of the Venn diagram. Not yet re-implemented after version 0.0.30.900.}

\item{...}{additional arguments are passed to \code{render_venndir()}.}
}
\description{
Directional Venn diagram
}
\examples{
setlist <- make_venn_test(100, 3, do_signed=FALSE);

setlist <- make_venn_test(100, 3, do_signed=TRUE);
vo <- venndir(setlist)
jamba::sdim(vo);

vobase <- venndir(setlist, debug=3)

}
\seealso{
Other venndir core: 
\code{\link{render_venndir}()},
\code{\link{signed_overlaps}()},
\code{\link{textvenn}()},
\code{\link{venn_meme}()}
}
\concept{venndir core}
