% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/venndir-curate.R
\name{curate_venn_labels}
\alias{curate_venn_labels}
\title{Curate Venn labels}
\usage{
curate_venn_labels(
  x,
  type = c("sign", "color"),
  curate_df = NULL,
  unicode = TRUE,
  blend_preset = "ryb",
  split = " ",
  ...
)
}
\arguments{
\item{x}{\code{vector} of overlap labels.}

\item{type}{\code{character} string where \code{type="sign"} will curate
\code{x} into directional sign, and \code{type="color"} will curate
\code{x} into corresponding directional color.}

\item{curate_df}{\code{data.frame} or \code{NULL} with optional curation
rules. The input is coerced to \code{data.frame} if necessary.
The colnames are expected to include:
\itemize{
\item \code{"from"} - regular expression patterns
\item \code{"sign"} - replacement value when \code{type="sign"}
\item \code{"color"} - replacement R color when \code{type="color"}
\item \code{"hide_singlet"} - logical whether to display signed counts
for singlet overlap sets.
}}

\item{unicode}{\code{logical} default TRUE, whether to use Unicode characters,
passed to \code{get_venndir_curate_df}.}

\item{blend_preset}{\code{character} string passed as \code{preset} to
\code{colorjam::blend_colors()} to define the color wheel used
during color blending operations.}

\item{split}{\code{character} string used to split each "sign" in the input
string \code{x}, assumed to be space character \code{" "}. This split is required
to process replacement for each "sign" value without iteratively
replacing values in \code{x} which can cause re-replacement of values
which is not intended.}

\item{...}{additional arguments are ignored.}
}
\value{
\code{vector} of labels or colors, based upon argument \code{type}.
}
\description{
Curate Venn labels
}
\details{
This venndir utility function is used to convert a basic
directional label such as \code{"0 1 0 -1"} suitable for display.
It can output either Unicode or non-Unicode text label,
or a corresponding color.

The input is defined in a \code{data.frame} obtained from
\code{get_venndir_curate_df()}, or using the user-provided \code{curate_df}.

Each sign returned by \code{signed_overlaps()}
is matched in the 'from' column, then replaced with values in the
'sign' column, then colorized by the 'color' column.

Note that zeros \code{"0"} are typically removed before calling this function.

The \code{curate_df} must contain these four colnames:
\itemize{
\item \code{"from"} - regular expression patterns, which will be surrounded
by \code{"^("} and \code{")$"} to ensure complete match.
\item \code{"sign"} - \code{character} replacement for each value matched in \code{"from"}
when \code{type="sign"}.
\item \code{"color"} - \code{character} R color to assign to each value matched
in \code{"from"}, when \code{type="color"}.
\item \code{"hide_singlet"} - \code{logical} indicating whether signed singlet counts
should be hidden, for example "agreement" has no meaning when
only one set is involved.
}

Multiple signs are concatenated together, in the event the input overlap
has multiple values, for example \code{"1 1"} becomes \code{"^^"} with no
spacing.

To impose whitespace between sign characters, define \code{sign=c("^ ", "v ")}
to include whitespace. Any leading/trailing whitespace will be removed
afterwards.
}
\examples{
options("warn"=-1); # make them stop

venn_labels <- c("0 1 0 -1", "1 -1", "1 1 1", "mixed", "agreement", "1 1 0 0");
(curate_venn_labels(venn_labels, "sign"))
(curate_venn_labels(venn_labels, "sign", unicode=FALSE))

(curate_venn_labels(venn_labels, "color"))

jamba::printDebug(as.list(curate_venn_labels(venn_labels, "sign")),
   collapse=", ",
   fgText=as.list(curate_venn_labels(venn_labels, "color")))

}
\seealso{
Other venndir utility: 
\code{\link{expand_range}()},
\code{\link{get_venndir_curate_df}()},
\code{\link{make_color_contrast}()},
\code{\link{make_venn_combn_df}()},
\code{\link{make_venn_test}()},
\code{\link{match_list}()},
\code{\link{modify_venndir_overlap}()},
\code{\link{nudge_venndir_label}()},
\code{\link{plot,Venndir,ANY-method}},
\code{\link{print_color_df}()},
\code{\link{shrink_df}()},
\code{\link{three_point_angle}()},
\code{\link{venndir_legender}()},
\code{\link{venndir_to_df}()}
}
\concept{venndir utility}
