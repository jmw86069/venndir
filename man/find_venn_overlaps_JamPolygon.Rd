% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/venndir-polyclip.R
\name{find_venn_overlaps_JamPolygon}
\alias{find_venn_overlaps_JamPolygon}
\title{Find Venn polygon overlaps}
\usage{
find_venn_overlaps_JamPolygon(
  jp,
  venn_counts = NULL,
  venn_items = NULL,
  venn_colors = NULL,
  sep = "&",
  preset = "dichromat2",
  blend_preset = "ryb",
  sp_nudge = NULL,
  rotate_degrees = 0,
  do_plot = FALSE,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{jp}{\code{JamPolygon} that contains one polygon per set, named
using set names.}

\item{venn_counts}{\code{vector} with \code{integer} values, whose names
represent each Venn overlap set combination, using
\code{sep} as delimiter between set names.}

\item{venn_items}{\code{list} or \code{NULL} that contains items in each
overlap set.}

\item{sep}{\code{character} string used as a delimiter between set names.}

\item{preset, blend_preset}{\code{character} string passed to
\code{colorjam::rainbowJam()} and \code{colorjam::blend_colors()},
respectively, to define the color hue wheel used for categorical
colors, and for color blending. The default \code{preset="dichromat2"}
chooses color-blindness-friendly categorical colors, and
\code{blend_preset="ryb"} blends multiple colors using a red-yellow-blue
color wheel, consistent with paint-type color combinations.}

\item{sp_nudge, rotate_degrees}{passed to \code{nudge_sp()} to allow manual
adjustment of \code{sp} objects.}

\item{do_plot}{\code{logical} indicating whether to plot the output
\code{SpatialPolygonsDataFrame} object.}

\item{verbose}{\code{logical} indicating whether to print verbose output.}

\item{...}{additional arguments are passed to supporting functions
\code{colorjam::group2colors()}, \code{colorjam::blend_colors()}, \code{nudge_sp()}.}
}
\value{
\code{JamPolygon} object, which contains columns:
\itemize{
\item \code{"name"}
\item \code{"x"}, \code{"y"}
\item \code{"fill"}
\item \code{"venn_name"}
\item \code{"venn_count"}
\item \code{"venn_items"}
\item \code{"venn_color"}
\item \code{"label"}
\item \code{"label_x"}
\item \code{"label_y"}
}
}
\description{
Find Venn polygon overlaps
}
\details{
This function takes a named list of polygons
and returns the combination of polygon overlaps
as used in a Venn diagram.

When a vector of Venn counts is supplied, the
counts are associated with the respective polygon,
and any counts not represented by a polygon
are returned as an attribute \code{"venn_missing"}.
}
\examples{
# simple Venn circles
test_counts <- c(A=5, B=10, C=3, `B&C`=2)
x <- eulerr::euler(test_counts)
jp1 <- eulerr_to_JamPolygon(x)
polygon_colors <- colorjam::rainbowJam(length(jp1))
jp1@polygons$fill <- polygon_colors;
plot(jp1)

xo <- find_venn_overlaps_JamPolygon(jp=jp1, venn_counts=test_counts)
xo@polygons$border <- jamba::makeColorDarker(darkFactor=1.2,
   xo@polygons$venn_color)
   xo@polygons$border.lwd <- 2;
plot(xo, flip_sign=-1);

}
\seealso{
Other JamPolygon: 
\code{\link{JamPolygon-class}},
\code{\link{Venndir-class}},
\code{\link{add_orientation_JamPolygon}()},
\code{\link{area_JamPolygon}()},
\code{\link{bbox_JamPolygon}()},
\code{\link{buffer_JamPolygon}()},
\code{\link{check_JamPolygon}()},
\code{\link{check_Venndir}()},
\code{\link{eulerr_to_JamPolygon}()},
\code{\link{farthest_point_JamPolygon}()},
\code{\link{has_point_in_JamPolygon}()},
\code{\link{intersect_JamPolygon}()},
\code{\link{label_fill_JamPolygon}()},
\code{\link{label_outside_JamPolygon}()},
\code{\link{label_segment_JamPolygon}()},
\code{\link{labelr_JamPolygon}()},
\code{\link{minus_JamPolygon}()},
\code{\link{nearest_point_JamPolygon}()},
\code{\link{plot,JamPolygon,missing-method}},
\code{\link{plot.JamPolygon}()},
\code{\link{point_in_JamPolygon}()},
\code{\link{polyclip_to_JamPolygon}()},
\code{\link{sample_JamPolygon}()},
\code{\link{split_JamPolygon}()},
\code{\link{union_JamPolygon}()},
\code{\link{update_JamPolygon}()}
}
\concept{JamPolygon}
