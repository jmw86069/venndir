% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/venndir-legend.R
\name{venndir_legender}
\alias{venndir_legender}
\title{Add legend to a Venndir figure}
\usage{
venndir_legender(
  venndir_output = NULL,
  setlist = NULL,
  x = "bottomright",
  set_colors = NULL,
  legend_style = c("grid", "data.frame"),
  unicode = TRUE,
  legend_headers = c(Set = "Set", Size = "Size", Percentage = "Percentage", Sign =
    "Sign"),
  sign_count_delim = NULL,
  keep_newlines = FALSE,
  legend_total = TRUE,
  legend_percentage = NULL,
  legend_signed = NULL,
  combine_signed = TRUE,
  combine_size = TRUE,
  legend_color_style = c("fill", "border"),
  box.lwd = 0,
  item_type = "",
  header_color = "#000000",
  header_bg = "#FFFFFF00",
  header_border = "#FFFFFF00",
  lwd = 1,
  x_inset = grid::unit(0.5, "lines"),
  y_inset = grid::unit(0.5, "lines"),
  font_cex = 1,
  fontfamily = "Arial",
  fontfamilies = list(signed = fontfamily, count = fontfamily, overlap = fontfamily),
  poly_alpha = 0.8,
  table_theme = NULL,
  draw_legend = TRUE,
  alias = NULL,
  labels = NULL,
  legend_padding = 2,
  set_suffix = "",
  curate_df = NULL,
  vp = NULL,
  fg_fun = marquee_text_grob,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{venndir_output}{\code{Venndir} object, default NULL, or one of:
\itemize{
\item \code{Venndir} object, also used to define \code{set_colors} when applicable
\item \code{list} representing \code{setlist}
\item \code{data.frame} output from \code{signed_overlaps()}
}}

\item{setlist}{\code{list}, default NULL, used when \code{venndir_output} is NULL
\itemize{
\item \code{list} representing \code{setlist}
\item \code{data.frame} with output from \code{signed_overlaps()}, with columns
\code{"sets"}, \code{"overlap"}, \code{"count"}. It may include \code{"each"} which is
required to display signed counts with \code{legend_signed=TRUE}.
}}

\item{x}{\code{character} string indicating the position of the legend,
as passed to \code{graphics::legend()} when \code{legend_style="base"}.
Not relevant when \code{legend_style="data.frame"}.}

\item{set_colors}{\code{character} optional vector of R colors, whose names
should match \code{names(setlist)}. When not supplied, colors are inferred
from \code{venndir_output}, and when that is not supplied, colors are
defined using \code{colorjam::rainbowJam()}.}

\item{legend_style}{\code{character} string, default \code{"grid"} with the
legend style, with these options:
\itemize{
\item \code{"grid"} generates a grid \code{grob} using \code{gridExtra::grid.table()}.
\item \code{"data.frame"} generates the legend \code{data.frame}.
}}

\item{unicode}{\code{logical} default TRUE, whether to use unicode arrows
for signed counts, used when \code{legend_signed=TRUE}.
This argument is passed to \code{curate_venn_labels()}.}

\item{legend_headers}{\code{character} vector with headers to use,
named by the default heading. To display no column header,
set \code{legend_headers=NULL} or \code{legend_headers=FALSE}.
Recognized names:
\itemize{
\item "Set" - the header for the set names, default "Set".
\item "Label" - when \code{labels} or \code{legend_labels} are defined, the
header "Label" can be customized.
\item "Size" - the header for the set sizes, default "Size".
\item "Sign" - the header for the set signs, default "Sign".
\item "Percentage" - the header for the set size percentage overall,
default "Percentage".
}}

\item{keep_newlines}{\code{logical} indicating whether to keep newlines
(line breaks) in the set labels used in the Venn legend.}

\item{legend_total}{\code{logical} default TRUE, whether to include the
total unique items in the legend.
When \code{FALSE} it also sets \code{legend_percentage=FALSE}.}

\item{legend_percentage}{\code{logical} default NULL, whether to include
the percentage of total items represented in each set.
This option is only used when \code{legend_total=TRUE}.
\itemize{
\item When set to \code{NULL} it will display percentage only when present
as a text label, as when \code{show_labels} include \code{"p"} or \code{"P"}.
}}

\item{legend_signed}{\code{logical} default NULL, whether to include
signed counts in the legend.
\itemize{
\item When set to \code{NULL} it displays signed counts only when available,
which requires: \code{overlap_type} is not "overlap", and
\code{legend_df} column "type" has entries with "sign".
}}

\item{combine_signed}{\code{logical} default TRUE, whether to combine multiple
signed counts into one column (TRUE), or keep separate columns
(FALSE). Somewhat experimental.
This option is only used when signed counts are included.}

\item{combine_size}{\code{logical} default TRUE, whether to combine
counts in the "Size" column with signed counts.
When \code{TRUE}, this option also left-aligns the "Size" column.}

\item{legend_color_style}{\code{character} string to customize how colors are
used, \code{c("fill", "border")} are default:
\itemize{
\item \code{"fill"}: will use the Venn fill color
\item \code{"border"}: will use the Venn border color
\item \code{"nofill"}: will remove the Venn fill color
\item \code{"noborder"}: will remove the Venn border color
\item \code{"greyfill"}: will use \code{"F4F4f4"} grey fill color, matching the Total.
\item \code{"greyborder"}: will use \code{"#999999"} border color, matching the Total.
\item \code{"blackborder"}: will use \code{"#000000"} border color, matching the Total.
}}

\item{box.lwd}{\code{numeric} used to define the box line width,
as passed to \code{graphics::legend()} when \code{legend_style="base"}.}

\item{item_type}{\code{character} string used as a suffix to the counts
displayed in the legend. Use \code{item_type=""} or \code{item_type=NULL}
to hide this suffix.}

\item{header_color, header_bg, header_border}{\code{character} R colors
to define colors for particular elements:
\itemize{
\item \code{header_color} defines the text color of the column headers.
To hide the column header, currently use \code{header_color="white"},
matching whatever color is used for \code{header_bg}.
\item \code{header_bg} defines the background fill color for the column headers.
\item \code{header_border} defines the border color for the header, which
is also applied to all cells in the table. Note that the line is
drawn with line width \code{lwd}.
}}

\item{lwd}{\code{numeric}, default 1, cell border line width used
in the legend table, when \code{legend_style="grid"}.}

\item{x_inset, y_inset}{\code{grid::unit}, default 1 line each, used
when \code{legend_style="grid"} to position the legend relative to \code{x},
useful when positioning the legend near the edge \code{x="bottomleft"}.

The inset controls distance from the plot edge along the x- and y-axes.
For example, \code{x_inset=grid::unit(2, "lines")} will
place the legend table 2 character lines (which are defined by
line height for typical character size) away from the left or
right edge of the plot.

Any valid \code{grid::unit} can be used.
Note that the metric is "plot edge", and the plot is fixed 1:1 aspect,
so for wide plot devices a negative \code{x_inset} may be used to nudge
the legend outside the typical plot boundary.}

\item{font_cex}{\code{numeric} adjustment to default font sizes. The default
font size with \code{legend_style="grid"} uses a 12 point font, so to adjust
to a specific font size like 8 points, use: \code{font_cex=8/12}}

\item{fontfamily}{\code{character} used as the default font for all labels,
and is used in \code{fontfamilies} by default. However \code{fontfamilies}
takes priority when defined.}

\item{fontfamilies}{\code{list} with named elements
to allow a custom font for each element of the legend, consistent
with usage by \code{assemble_venndir_label()}.
\itemize{
\item \code{"overlap"}: used for set labels and column headers,
and column headers are currently always bold font.
\item \code{"count"}: used for main counts in "Size", and percentage in
"Percentage" when displayed.
\item \code{"signed"}: used for signed counts, when shown and when
\code{combine_size=FALSE}, otherwise the signed labels are combined
with count labels and they re-use the same font as \code{"count"} above.
}}

\item{table_theme}{\code{list} default NULL, optional theme as described in
\code{gridExtra::tableGrob()}, and \code{gridExtra::ttheme_default()}.
When supplied, the \code{font_cex} argument is ignored.
The \code{list} components include:
\itemize{
\item \code{base_size} - default font size
\item \code{base_colour} - default font color
\item \code{base_family} - default font family
\item \code{parse} - \code{logical} whether to parse plotmath expressions
\item \code{padding} - \code{grid::unit()} for horizontal and vertical padding
within each cell
}}

\item{draw_legend}{\code{logical}, default TRUE, whether to draw the resulting
legend. When \code{FALSE} the data is returned based upon \code{legend_style},
when \code{legend_style="grid"} it returns a grid \code{grob}, otherwise
it returns \code{data.frame}.}

\item{alias}{\code{character}, default NULL, optional set aliases,
intended to add a new first column to the legend with these
aliases. Useful to display a short label in the legend table,
while also supplying a longer label via \code{names(setlist)}
or \code{labels}.
This argument differs from \code{labels} in that \code{labels} replaces
the \code{names(setlist)} in the legend table with \code{labels}.
However, \code{alias} adds a new column to the table as column 1.}

\item{labels}{\code{character} default NULL, optional custom labels to
display in place of \code{names(setlist)} in the legend table.
Note: \code{names(labels)} must also match \code{names(setlist)}.
This argument differs from \code{labels} in that \code{labels} replaces
the \code{names(setlist)} in the legend table with \code{labels}.
However, \code{alias} adds a new column to the table as column 1.}

\item{legend_padding}{\code{numeric} or \code{grid::unit}, default 5, padding for
each table cell. This value is also adjusted by \code{font_cex}.
This value is only used when \code{table_theme} is not
provided.}

\item{set_suffix}{\code{character} string (default \code{""}) used as optional
suffix, and previously used \code{":"} but was changed to \code{""}.}

\item{curate_df}{\code{data.frame}, default NULL will use the metadata
of \code{venndir_output} to retrieve any custom \code{curate_df} already
in use for the Venndir object.}

\item{verbose}{\code{logical} indicating whether to print verbose output.}

\item{...}{additional arguments are passed to internal functions.
Notably \code{curate_venn_labels()} may accept the \code{curate_df} argument,
to allow custom labeling.}
}
\value{
\code{data.frame} with legend information is returned invisibly,
unless using \verb{legend_style="grid", draw_legend=FALSE} in which case the
legend \code{grob} object is returned which can then be manipulated
before rendering.
}
\description{
Add legend to a Venndir figure
}
\details{
Add a Venndir legend to the perimeter of an existing Venndir figure.
Note this function it typically called from \code{venndir()} via
\code{render_venndir()} when argument \code{draw_legend=TRUE} (default).
By using \code{draw_legend=FALSE} the returned \code{Venndir} object can be
used as input to \code{venndir_legender()} to draw the legend in a custom
location, for example using the overall figure viewport instead of
being limited to the Venndir viewport.

When using arguments \code{legend_style="grid"} and \code{draw_legend=FALSE} the
\code{grid} \code{grob} object is returned, so that it can be manipulated
as needed before rendering. Note that in this case, the viewport
will have already been defined and stored into \code{legend_grob$vp}
with x position \code{legend_grob$vp$x} and y position \code{legend_grob$vp$y}.
Total legend width is: \code{sum(legend_grob$widths)}, and
total legend height is: \code{sum(legend_grob$heights)}.
}
\examples{
setlist <- make_venn_test(100, 3, do_signed=TRUE);
# by default the legend is shown
vo <- venndir(setlist)

# move to different corner
vo <- venndir(setlist, legend_x="bottomleft")

# add alias column
vo <- venndir(setlist,
   legend_labels=setNames(paste0("Items detected in ", LETTERS[1:3]),
      names(setlist)),
   alias=setNames(LETTERS[1:3], names(setlist)))

# turn off the default legend
vo <- venndir(setlist, draw_legend=FALSE)
venndir_legender(setlist=setlist,
   venndir_output=vo,
   x="bottomleft")

# test multi-line labels
names(setlist) <- c("Group B-<br>Group A",
   "Group C-<br>\nGroup B",
   "Group C-<br>\nGroup A")
vo <- venndir(setlist,
   draw_legend=FALSE,
   font_cex=1.3,
   fontfamily="Arial",
   expand_fraction=c(-0.1, 0.4, -0.1, 0.1),
   show_segments=FALSE)
venndir_legender(setlist=setlist,
   venndir_output=vo,
   font_cex=1.3,
   x="bottomleft")
   
# some common customizations
vo <- venndir(setlist,
   draw_legend=FALSE,
   expand_fraction=c(0.2, 0.2, 0.2, 0.2)*3,
   font_cex=0.7,
   fontfamily="Arial")
venndir_legender(vo,
   legend_headers=c(Set="Comparison",
      Size="Counts (Signed Counts)"),
   legend_color_style=c("nofill", "blackborder"),
   font_cex=0.8,
   x="bottomleft")
venndir_legender(vo,
   combine_size=FALSE,
   legend_headers=c(Set="Comparison",
      Size="Counts", Sign="(Signed Counts)"),
   legend_color_style=c("nofill", "blackborder"),
   font_cex=0.8,
   x="bottomright")
venndir_legender(vo,
   combine_size=FALSE,
   combine_sign=FALSE,
   legend_headers=c(Set="Comparison",
      Size="Counts", Sign="(Signed Counts)"),
   legend_color_style=c("nofill", "blackborder"),
   font_cex=0.8,
   x="topright")
venndir_legender(vo,
   legend_percent=TRUE,
   legend_headers=c(Set="Comparison",
   Percentage="Pct.",
      Size="Counts", Sign="(Signed Counts)"),
   legend_color_style=c("nofill", "blackborder"),
   font_cex=0.8,
   x="topleft")

# Example showing how to render the legend_grob
# which may offer some flexibility.
vo <- venndir(setlist,
   draw_legend=FALSE)
legend_grob <- venndir_legender(setlist=setlist,
   venndir_output=vo,
   draw_legend=FALSE,
   header_color="white",
   x="bottomleft")
grid::grid.draw(legend_grob)

# custom grid table theme
vo <- venndir(setlist,
   show_segments=FALSE,
   draw_legend=FALSE)
legend_grob <- venndir_legender(setlist=setlist,
   venndir_output=vo,
   headers=FALSE,
   x="bottomright",
   table_theme=gridExtra::ttheme_default(base_size=11,
      base_family="sans",
      padding=grid::unit(c(2, 2), "mm")))

# optional expanded labels, and subset setlist
setlist <- make_venn_test(100, 5, do_signed=TRUE);
vo <- venndir(setlist,
   sets=c(4, 1, 2),
   show_segments=FALSE,
   draw_legend=FALSE)
venndir_legender(venndir_output=vo,
   font_cex=1,
   setlist=setlist,
   labels=jamba::nameVector(
      paste0("This is set ", LETTERS[1:5]),
      names(setlist)))

}
\seealso{
Other venndir support: 
\code{\link{make_venn_test}()},
\code{\link{modify_venndir_overlap}()},
\code{\link{signed_overlaps}()}
}
\concept{venndir support}
