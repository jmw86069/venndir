% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/JamPolygon.R
\name{point_in_JamPolygon}
\alias{point_in_JamPolygon}
\title{Determine if a point is inside a JamPolygon}
\usage{
point_in_JamPolygon(
  x,
  jp,
  apply_holes = TRUE,
  nullValue = NA,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{x}{\code{list} with \code{"x"},\code{"y"} with \code{numeric} values, representing
one or more points.}

\item{jp}{\code{JamPolygon}}

\item{apply_holes}{\code{logical} (default TRUE) whether internal polygon
holes are applied, which requires a point in a solid portion of
the polygon.
When \code{apply_holes=FALSE} a point must only be contained within the
outer boundary of the polygon.}

\item{nullValue}{default \code{NA} to define the return value when there
is no overlapping polygon for a given point.
Another alternative is \code{nullValue=NULL} which has the benefit of
returning a vector with length 0, convenient to test for presence
of any overlaps. In fact, this option is used by
\code{has_point_in_JamPolygon()} for convenience.}

\item{...}{additional arguments are ignored.}
}
\value{
\code{list} with \code{integer} index values representing any
polygons in \code{jp} which contain each point in \code{x}.
When there is no overlapping polygon, \code{nullValue} is returned.
}
\description{
Determine if a point is inside a JamPolygon
}
\seealso{
Other JamPolygon: 
\code{\link{area_JamPolygon}()},
\code{\link{farthest_point_JamPolygon}()},
\code{\link{has_point_in_JamPolygon}()},
\code{\link{intersect_JamPolygon}()},
\code{\link{label_fill_JamPolygon}()},
\code{\link{label_outside_JamPolygon}()},
\code{\link{labelr_JamPolygon}()},
\code{\link{minus_JamPolygon}()},
\code{\link{nearest_point_JamPolygon}()},
\code{\link{plot.JamPolygon}()},
\code{\link{polyclip_to_JamPolygon}()},
\code{\link{split_JamPolygon}()},
\code{\link{union_JamPolygon}()},
\code{\link{update_JamPolygon}()}
}
\concept{JamPolygon}
