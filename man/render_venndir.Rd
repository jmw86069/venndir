% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/venndir-render.R
\name{render_venndir}
\alias{render_venndir}
\title{Render Venn or Euler diagram}
\usage{
render_venndir(
  venndir_output = NULL,
  venn_spdf = NULL,
  label_df = NULL,
  asp = 1,
  xlim = NULL,
  ylim = NULL,
  expand_fraction = 0,
  xpd = NA,
  font_cex = 1,
  item_cex = 0.9,
  plot_warning = TRUE,
  show_label = NA,
  show_items = c(NA, "none", "sign item", "item", "sign"),
  show_zero = TRUE,
  show_segments = TRUE,
  item_degrees = -18,
  display_counts = TRUE,
  max_items = 100,
  label_style = c("custom", "basic", "fill", "shaded", "shaded_box", "lite", "lite_box"),
  fontfamily = "Arial",
  segment_buffer = -0.2,
  inside_percent_threshold = 5,
  plot_style = c("base", "gg"),
  group_labels = TRUE,
  ggtheme = ggplot2::theme_void,
  draw_buffer = FALSE,
  ...
)
}
\arguments{
\item{venndir_output}{\code{list} object produced by \code{venndir()} with
at least two elements: \code{"venn_spdf"} which is a
\code{sp::SpatialPolygonsDataFrame}; and \code{label_df} which is
a \code{data.frame}. See argument descriptions below for the
requirements of each object.}

\item{venn_spdf}{\code{sp::SpatialPolygonsDataFrame} that contains
one polygon for each displayed overlap set. This object is
expected to contain colnames:
\itemize{
\item \code{"color"} with fill color;
\item \code{"alpha"} with transparency optionally applied to \code{"color"};
\item \code{"border"} with border color, where \code{NA} draws no border;
\item \code{"lwd"} with line width; and \code{"lty"} with line type. Only
\code{"color"} is required, the others are filled with defaults
as needed.
}}

\item{label_df}{\code{data.frame} that contains these required
colnames:
\itemize{
\item \code{"x"} with x coordinate for each label,
\item \code{"y"} with y coordinate for each label,
\item \code{"text"} with the label to be displayed, in any
format compatible with \code{gridtext::richtext_grob()}.
}

Optional colnames are filled with defaults as needed:
\itemize{
\item \code{"show_label"} a \code{logical} vector for which labels to show \verb{[TRUE]};
\item \code{"show_items"} a \code{logical} indicating whether to show item labels \verb{[FALSE]};
\item \code{"vjust"}, \code{"hjust"} vertical/horizontal position \verb{[0.5, 0.5]};
\item \code{"halign"} with horizontal alignment \verb{[0.5]};
\item \code{"rot"} label rotation \verb{[0]};
\item \code{"color"} label color \verb{[black]};
\item \code{"fontsize"} fontsize used by \code{grid::par()} \verb{[14]};
\item \code{"border"} border color, where \code{NA} draws no border \verb{[NA]};
\item \code{"lty"}, \code{"lwd"} line type and line width \verb{[1, 1]};
\item \code{"fill"} label background fill, where \code{NA} draws no background fill \verb{[NA]};
\item \code{"padding"}, \code{"padding_unit"} passed to \code{gridtext::richtext_grob()}
to define padding around each label \verb{[2, "pt"]};
\item \code{"r"}, \code{"r_unit"} passed to \code{gridtext::richtext_grob()} to define
rounded corners, relevant only when \code{"border"} or \code{"fill"} are
not \code{NA} \verb{[2, "pt"]}.
\item \code{"item_cex"} cex adjustment for item labels
\item \code{"show_label"} \code{logical} indicating whether to show each label
\item \code{"show_items"} \code{logical} indicating whether to show items
}}

\item{asp}{\code{numeric} value indicating the aspect ratio, passed
to \code{plot()}. The default \code{asp=1} ensures that circles are
always drawn with correct aspect ratio so they are displayed
as proper circles.}

\item{xlim, ylim}{\code{numeric} range for x- and y-axis, respectively.
When \code{xlim} or \code{ylim} are \code{NULL}, values are derived from the
coordinates from \code{venn_spdf} and \code{label_df}.}

\item{xpd}{see \code{graphics::par()}, when \code{xpd=FALSE} it clips text
labels and polygons to the plot boundary; when \code{xpd=TRUE} it
clips to the figure region, and when \code{xpd=NA} it is clipped
to the full device region. This option is mainly helpful
as \code{xpd=NA} ensures labels are displayed even when they overlap
the plot boundary.}

\item{plot_warning}{\code{logical} indicating whether to draw a text
label on the bottom of the plot whenever a non-zero overlap
count cannot be displayed given the \code{label_df} data. This
occurs when a proportional Venn (Euler) diagram does not
or cannot represent every possible overlap, causing some
overlaps to be hidden from the plot.}

\item{label_style}{\code{character} string indicating the style of label
to display. The values \verb{"basic","none","shaded","lite","fill"}
style the label background fill, while presence of \code{"box"} in
the string will draw a border around the label:
\code{"basic"} or \code{"none"} uses no background fill,
\code{"lite"} uses lite background fill,
\code{"fill"} uses opaque fill with the overlap set color,
\code{"shaded"} uses slightly transparent fill with overlap set color,
\code{"box"} displays border around the label.}

\item{fontfamily}{\code{character} string indicating the font family,
which can be useful if Unicode characters are displayed as empty
boxes instead of proper Unicode characters. This value may be
device-dependent, for example fonts available for PDF output
may differ from those for PNG.}

\item{inside_percent_threshold}{\code{numeric} value indicating the percent
threshold, below which a polygon label is moved outside the polygon
by default. The threshold is calculated by area of the polygon
divided by total area of the enclosing polygon, multiplied by 100.
Therefore \code{inside_percent_threshold=5} will require a polygon to
represent at least 5 percent of the total area.}

\item{plot_style}{\code{character} string indicating the style
of plot: \code{"base"} uses base R graphics; \code{"gg"} uses
ggplot2 graphics (not yet implemented).}

\item{group_labels}{\code{logical} to enable experimental feature that
groups multiple \code{gridtext::richtext_grob()} elements together
by overlap set and position, currently only implemented
(partially) for base R plots.}

\item{...}{additional arguments are passed to \code{plot()}
when plotting \code{venn_spdf} which is expected to be a
\code{sp::SpatialPolygonsDataFrame}.}
}
\description{
Render Venn or Euler diagram
}
\details{
This function is intended to render a Venn or Euler diagram
directly from the output of \code{venndir()} to allow customization
of various aspects of the figure.
}
\examples{
setlist <- make_venn_test(100, 3, do_signed=TRUE);
venndir_output <- venndir(setlist, 1:2, overlap_type="each", do_plot=FALSE);
render_venndir(venndir_output);
render_venndir(venndir_output, plot_style="gg");

vo <- venndir(setlist, 1:2, overlap_type="each", do_plot=FALSE, show_items="sign item", show_set="all");
vo <- nudge_venndir_label(vo, set="set_A",
   label_type="main",
   x_offset=-0.5, y_offset=1.5)
vo <- nudge_venndir_label(vo, set="set_B",
   label_type="main",
   x_offset=0.5, y_offset=1.5)
vo <- nudge_venndir_label(vo, set="set_A&set_B",
   label_type="main",
   x_offset=0, y_offset=2)
vo$label_df$hjust[1:3] <- 0.5;
vo$label_df$vjust[1:3] <- c(0, 0, 0.5);
render_venndir(vo, show_set="all", show_items="sign item", draw_buffer=TRUE, buffer_w=0.3)
render_venndir(vo, show_set="all",
   label_style="lite_box",
   show_items="sign item", draw_buffer=TRUE, buffer_w=0.3)
render_venndir(vo, plot_style="gg", show_set="all",
   label_style="lite_box",
   show_items="sign item", draw_buffer=TRUE, buffer_w=0.3)

venndir_output$label_df[1,c("x", "y")] <- c(2.5, 6.5);
venndir_output$label_df[2,c("x", "y")] <- c(7.5, 6.5);
venndir_output$label_df[2,c("hjust")] <- c(0);
venndir_output$label_df[1:2,c("vjust")] <- c(0, 0);
render_venndir(venndir_output, font_cex=1.5);

venndir_output$label_df[1,c("x", "y")] <- c(2, 6);
venndir_output$label_df[2,c("x", "y")] <- c(8.3, 6);
render_venndir(venndir_output);
render_venndir(venndir_output, xpd=NA, xlim=c(2, 9));

}
\seealso{
Other venndir core: 
\code{\link{signed_overlaps}()},
\code{\link{textvenn}()},
\code{\link{venndir}()}
}
\concept{venndir core}
