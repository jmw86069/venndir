% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/venndir-render.R
\name{render_venndir}
\alias{render_venndir}
\title{Render Venn or Euler diagram}
\usage{
render_venndir(
  venndir_output = NULL,
  venn_spdf = NULL,
  label_df = NULL,
  asp = 1,
  xlim = NULL,
  ylim = NULL,
  xpd = NA,
  font_cex = 1,
  plot_warning = TRUE,
  display_items = c("none", "sign label", "label", "sign"),
  item_angle = 20,
  display_counts = TRUE,
  max_items = 100,
  fontfamily = "Arial",
  ...
)
}
\arguments{
\item{venndir_output}{\code{list} object produced by \code{venndir()} with
at least two elements: \code{"venn_spdf"} which is a
\code{sp::SpatialPolygonsDataFrame}; and \code{label_df} which is
a \code{data.frame}. See argument descriptions below for the
requirements of each object.}

\item{venn_spdf}{\code{sp::SpatialPolygonsDataFrame} that contains
one polygon for each displayed overlap set. This object is
expected to contain colnames:
\itemize{
\item \code{"color"} with fill color;
\item \code{"alpha"} with transparency optionally applied to \code{"color"};
\item \code{"border"} with border color, where \code{NA} draws no border;
\item \code{"lwd"} with line width; and \code{"lty"} with line type. Only
\item \code{"color"} is required, the others are filled with defaults
as needed.
}}

\item{label_df}{\code{data.frame} that contains these required
colnames:
\itemize{
\item \code{"x"} with x coordinate for each label,
\item \code{"y"} with y coordinate for each label,
\item \code{"text"} with the label to be displayed, in any
format compatible with \code{gridtext::richtext_grob()}.
}

Optional colnames are filled with defaults as needed:
\itemize{
\item \code{"show_label"} a \code{logical} vector for which labels to show \verb{[TRUE]};
\item \code{"vjust"}, \code{"hjust"} vertical/horizontal position \verb{[0.5, 0.5]};
\item \code{"halign"} with horizontal alignment \verb{[0.5]};
\item \code{"rot"} label rotation \verb{[0]};
\item \code{"col"} label color \verb{[black]};
\item \code{"fontsize"} fontsize used by \code{grid::par()} \verb{[14]};
\item \code{"border"} border color, where \code{NA} draws no border \verb{[NA]};
\item \code{"lty"}, \code{"lwd"} line type and line width \verb{[1, 1]};
\item \code{"fill"} label background fill, where \code{NA} draws no background fill \verb{[NA]};
\item \code{"padding"}, \code{"padding_unit"} passed to \code{gridtext::richtext_grob()}
to define padding around each label \verb{[2, "pt"]};
\item \code{"r"}, \code{"r_unit"} passed to \code{gridtext::richtext_grob()} to define
rounded corners, relevant only when \code{"border"} or \code{"fill"} are
not \code{NA} \verb{[2, "pt"]}.
}}

\item{asp}{\code{numeric} value indicating the aspect ratio, passed
to \code{plot()}. The default \code{asp=1} ensures that circles are
always drawn with correct aspect ratio so they are displayed
as proper circles.}

\item{xlim, ylim}{\code{numeric} range for x- and y-axis, respectively.
When \code{xlim} or \code{ylim} are \code{NULL}, values are derived from the
coordinates from \code{venn_spdf} and \code{label_df}.}

\item{xpd}{see \code{graphics::par()}, when \code{xpd=FALSE} it clips text
labels and polygons to the plot boundary; when \code{xpd=TRUE} it
clips to the figure region, and when \code{xpd=NA} it is clipped
to the full device region. This option is mainly helpful
as \code{xpd=NA} ensures labels are displayed even when they overlap
the plot boundary.}

\item{plot_warning}{\code{logical} indicating whether to draw a text
label on the bottom of the plot whenever a non-zero overlap
count cannot be displayed given the \code{label_df} data. This
occurs when a proportional Venn (Euler) diagram does not
or cannot represent every possible overlap, causing some
overlaps to be hidden from the plot.}

\item{...}{additional arguments are passed to \code{plot()}
when plotting \code{venn_spdf} which is expected to be a
\code{sp::SpatialPolygonsDataFrame}.}
}
\description{
Render Venn or Euler diagram
}
\details{
This function is intended to render a Venn or Euler diagram
directly from the output of \code{venndir()} to allow customization
of various aspects of the figure.
}
\examples{
setlist <- make_venn_test(100, 3, do_signed=TRUE);
venndir_output <- venndir(setlist, 1:2, overlap_type="each", do_plot=FALSE);
render_venndir(venndir_output);

venndir_output$label_df[1,c("x", "y")] <- c(2.5, 6.5);
venndir_output$label_df[2,c("x", "y")] <- c(7.5, 6.5);
venndir_output$label_df[2,c("hjust")] <- c(0);
venndir_output$label_df[1:2,c("vjust")] <- c(0, 0);
render_venndir(venndir_output, font_cex=1.5);

venndir_output$label_df[1,c("x", "y")] <- c(2, 6);
venndir_output$label_df[2,c("x", "y")] <- c(8.3, 6);
render_venndir(venndir_output);
render_venndir(venndir_output, xpd=NA, xlim=c(2, 9));

}
\seealso{
Other venndir core: 
\code{\link{ggrender_venndir}()},
\code{\link{signed_overlaps}()},
\code{\link{textvenn}()},
\code{\link{venndir}()}
}
\concept{venndir core}
