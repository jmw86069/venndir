% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/JamPolygon.R
\name{area_JamPolygon}
\alias{area_JamPolygon}
\title{Area for each polygon in JamPolygon}
\usage{
area_JamPolygon(
  jp,
  apply_abs = FALSE,
  flip_sign = 1,
  return_list = FALSE,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{jp}{\code{JamPolygon}}

\item{apply_abs}{\code{logical} (default FALSE) indicating whether to use the
absolute value of the area prior to applying the orientation.
\itemize{
\item When FALSE, it uses the orientation of the points, where clockwise
indicates positive, and counter-clockwise indicates negative.
\item When TRUE it calculates absolute area, and flips the sign based
upon the orientation from \code{add_orientation_JamPolygon()}, which
itself defines orientation based upon (1) the clockwise nature of points,
and (2) whether the polygon is inside a parent polygon.
}}

\item{flip_sign}{\code{integer} indicating whether to flip the sign
of the orientation, and is passed to \code{add_orientation_JamPolygon()}.}

\item{return_list}{\code{logical} indicating whether to return a \code{list}
with area of each polygon part, one \code{numeric} vector per row
in \code{jp@polygons}. Note that this step does not indicate which
polygon hole is encompassed inside another larger polygon, so it
cannot directly be used to determine the largest polygon in complex
nested polygon structures.}

\item{...}{additional arguments are ignored.}
}
\value{
\code{numeric} vector with the area of each polygon, one value
per row in \code{jp@polygons}.
Or when \code{return_list=TRUE} a \code{list} where each element is produced
per row of \code{jp@polygons}, containing a \code{numeric} vector with the area
of each polygon part. Note that holes are represented with negative
area multiplied by the orientation of the parent encompassing polygon.
}
\description{
Area for each polygon in JamPolygon
}
\details{
This function calculates the area of each individual polygon (row)
represented in a \code{JamPolygon} object. It calculates total area
of multi-part polygons, which by default calculates the positive area
of polygons, and subtracts area for any holes. The orientation defines
the presence of holes using \code{add_orientation_JamPolygon()}.

For example, it is possible to have three concentric circles as a
three-part polygon. By convention, the first polygon defines the
outer border, the second polygon defines an inner border hole), and
the third polygon defines a nested internal polygon.

Todo:
\itemize{
\item Consider simplifying polygons beforehand, to guarantee that no
multi-part polygons contain overlapping sections. Currently this
function assumes the input polygons are already simplified, such
that multi-part polygons on one row of \code{jp@polygons} do not contain
partially overlapping polygons, instead polygons are either adjacent,
fully overlapping (holes), or fully disconnected.
}
}
\examples{
df3 <- data.frame(name=c("polygon1", "polygon2"),
   label=c("polygon1", "polygon2"),
   x=I(list(
      list(c(1, 6, 6, 1),
         c(2, 5, 5, 2),
         c(3, 4, 4, 3)),
      list(#c(11, 16, 16, 11),
         c(12, 15, 15, 12),
         c(13, 14, 14, 13))
      )),
   y=I(list(
      list(c(1, 1, 6, 6),
         c(2, 2, 5, 5),
         c(3, 3, 4, 4)),
      list(#c(1, 1, 6, 6),
         c(2, 2, 5, 5),
         c(3, 3, 4, 4))
      )),
   fill=c("gold", "firebrick"))
jp3 <- new("JamPolygon", polygons=df3);
plot(jp3);

area_JamPolygon(jp3)

jp3@polygons$label <- paste0(names(jp3),
   "\narea=", area_JamPolygon(jp3));
plot(jp3)

area_JamPolygon(jp3, return_list=TRUE)

}
\seealso{
Other JamPolygon: 
\code{\link{JamPolygon-class}},
\code{\link{[,JamPolygon,ANY,ANY,ANY-method}},
\code{\link{add_orientation_JamPolygon}()},
\code{\link{bbox_JamPolygon}()},
\code{\link{buffer_JamPolygon}()},
\code{\link{check_JamPolygon}()},
\code{\link{check_Venndir}()},
\code{\link{eulerr_to_JamPolygon}()},
\code{\link{farthest_point_JamPolygon}()},
\code{\link{find_venn_overlaps_JamPolygon}()},
\code{\link{has_point_in_JamPolygon}()},
\code{\link{intersect_JamPolygon}()},
\code{\link{label_fill_JamPolygon}()},
\code{\link{label_outside_JamPolygon}()},
\code{\link{label_segment_JamPolygon}()},
\code{\link{labelr_JamPolygon}()},
\code{\link{minus_JamPolygon}()},
\code{\link{nearest_point_JamPolygon}()},
\code{\link{nudge_JamPolygon}()},
\code{\link{plot.JamPolygon}()},
\code{\link{point_in_JamPolygon}()},
\code{\link{polyclip_to_JamPolygon}()},
\code{\link{polygon_circles}()},
\code{\link{polygon_ellipses}()},
\code{\link{sample_JamPolygon}()},
\code{\link{split_JamPolygon}()},
\code{\link{union_JamPolygon}()},
\code{\link{update_JamPolygon}()}
}
\concept{JamPolygon}
