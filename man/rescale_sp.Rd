% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/venndir-sp.R
\name{rescale_sp}
\alias{rescale_sp}
\title{Rescale a SpatialPolygons object}
\usage{
rescale_sp(
  sp,
  rotate_degrees = 0,
  scale = c(1, 1),
  shift = c(0, 0),
  center = NULL,
  share_center = FALSE,
  update_bbox = TRUE,
  ...
)
}
\arguments{
\item{rotate_degrees}{\code{numeric} value in degrees indicating
rotation around the \code{center}, where positive values are
clockwise rotation. This rotation is only applied to two
columns in \code{x} defined by \code{rotation_axes}.}

\item{scale}{\code{numeric} vector whose values are expanded to length
\code{ncol(x)}. After subtracting the \code{center}, the coordinates
in each column are multiplied by the \code{scale}.}

\item{shift}{\code{numeric} vector whose values are expanded to length
\code{ncol(x)}. The coordinates in each column are added to
the \code{shift}, after applying \code{scale} and \code{rotate_degrees}}

\item{center}{\code{numeric} vector whose values are expanded to length
\code{ncol(x)}, indicating the center point used for \code{scale} and
\code{rotate_degrees} transformations. When \code{center=NULL} it
is derived from the bounding box, which is the mean of the range
for each column in \code{x}.}

\item{share_center}{\code{logical} indicating whether all polygons
should share the same center, where \code{share_center=TRUE} will
adjust everything collectively, and \code{share_center=FALSE} will
adjust each polygon independently relative to its own center
coordinate.}

\item{...}{additional arguments are ignored.}

\item{p}{object \code{sp::SpatialPolygons}}
}
\value{
object \code{sp::SpatialPolygons}
}
\description{
Rescale a SpatialPolygons object
}
\details{
This function simply applies \code{rescale_coordinates()} to an
object \code{sp::SpatialPolygons}, and it does so by calling
\code{rescale_ps} on each \code{sp::Polygons} object contained in
the \code{sp} input.
}
\examples{
sp <- sp_ellipses(c(3, 2), c(2, 3),
   xradius=c(1, 4),
   yradius=c(5, 2))
sp1 <- intersect_polygons(sp);
sp2 <- rgeos::gDifference(sp[1], sp[2]);
sp3 <- rgeos::gDifference(sp[2], sp[1]);
sp123 <- sp::rbind.SpatialPolygons(sp1, sp2, sp3, makeUniqueIDs=TRUE);
sp123a <- rescale_sp(sp123,
   scale=c(1.5, 1.5),
   share_center=TRUE);
sp123b <- rescale_sp(sp123,
   scale=c(1.5, 1.5));
col3 <- c("#FF000077", "#FFDD0077", "#0000DD77");
par("mfrow"=c(2, 2));
plot(sp123, col=col3,
   main="original polygons",
   xlim=c(-10, 15), ylim=c(-5, 10));
axis(1, las=2); axis(2, las=2);
plot(sp123a, col=col3,
   main="share_center=TRUE",
   xlim=c(-10, 15), ylim=c(-5, 10));
axis(1, las=2); axis(2, las=2);
plot(sp123[1:2], col=col3[1:2],
   main="share_center=FALSE\nrescaling only the blue polygon",
   xlim=c(-10, 15), ylim=c(-5, 10));
axis(1, las=2); axis(2, las=2);
plot(sp123b[3], col=col3[3],
   add=TRUE);
plot(sp123[2:3], col=col3[2:3],
   main="share_center=FALSE\nrescaling only the red polygon",
   xlim=c(-10, 15), ylim=c(-5, 10));
axis(1, las=2); axis(2, las=2);
plot(sp123b[1], col=col3[1],
   add=TRUE);
par("mfrow"=c(1, 1));

}
\seealso{
Other venndir spatial: 
\code{\link{degrees_to_adj}()},
\code{\link{diff_degrees}()},
\code{\link{display_angles}()},
\code{\link{get_largest_polygon}()},
\code{\link{get_sp_buffer}()},
\code{\link{intersect_polygons}()},
\code{\link{mean_degree_arc}()},
\code{\link{mean_degrees}()},
\code{\link{nudge_sp}()},
\code{\link{rescale_coordinates}()},
\code{\link{sp_circles}()},
\code{\link{sp_ellipses}()},
\code{\link{spread_degrees}()},
\code{\link{union_polygons}()}
}
\concept{venndir spatial}
