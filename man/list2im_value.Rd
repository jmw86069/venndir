% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/venndir-im.R
\name{list2im_value}
\alias{list2im_value}
\title{Optimized list to signed incidence matrix}
\usage{
list2im_value(setlist, empty = NULL, do_sparse = TRUE, force_sign = FALSE, ...)
}
\arguments{
\item{setlist}{\code{list} of vectors}

\item{empty}{default single value used for empty/missing entries,
the default \code{empty=0} uses zero for entries not present.
Another alternative is \code{NA}.}

\item{do_sparse}{\code{logical} indicating whether to coerce the output
to sparse matrix class \code{"ngCMatrix"} from the Matrix package.}

\item{...}{additional arguments are ignored.}

\item{coerce_sign}{\code{logical} indicating whether to coerce numeric
vector values to the sign. When \code{coerce_sign=FALSE} the vector
values are stored directly. When \code{coerce_sign=TRUE} the signs of
the vector values are stored.}
}
\value{
\code{Matrix} object that contains signed direction encoded
as \code{c(-1, 0, 1)} values.
}
\description{
Optimized list to signed incidence matrix
}
\details{
This function converts a list of named vectors into
an incidence matrix with value for each entry
(row) present in each input list (column). The rows
are defined by the vector names, and values are
defined by the vector values.

Note that this function will store zero \code{0} when the input
vector value is zero. When this is not the desired behavior,
the argument \code{empty} can be used to distinguish missing data
from data that is zero, for example by setting \code{empty=NA}.
In this way a value of zero \code{0} indicates "present but zero",
and a value \code{NA} indicates "not present at all". This
distinction is helpful when comparing entities which are not
tested in each scenario. For example if "geneA" is present
and the value is \code{1} in one list; "geneA" is not tested in
the second list; therefore the absence of "geneA" of a non-zero
value in the second list is not counted as "non-overlapping"
because it was not possible for it to have a non-zero value.
}
\examples{
setlist <- make_venn_test(100, 3, do_signed=TRUE)
imv <- list2im_value(setlist);
print(head(imv));

# convert back to list
im_value2list(imv);

# make a simple character vector list
setlistv <- lapply(setlist, function(i){
   j <- letters[i+3];
   names(j) <- names(i);
   j;
})
imv <- list2im_value(setlistv);
print(head(imv));
im_value2list(imv);

}
\seealso{
Other venndir conversion: 
\code{\link{counts2setlist}()},
\code{\link{im2list}()},
\code{\link{im_value2list}()},
\code{\link{list2im_opt}()}
}
\concept{venndir conversion}
